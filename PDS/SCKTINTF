/* REXX generalized HTTP requestor socket interface */
/**/
parse arg proxyname proxyport url . ;
lf = '25'x;
cr = '0d'x;
true = "1";
false = "0";
httpreq = "GET" url "HTTP/1.0"lf||cr|| ,
          "Accept: text/plain, text/html, text/*"lf||cr||lf||cr;
/**/
res = Socket('Initialize', 'scktintf');
parse var res rc subtaskid maxdesc service .;
if rc¬=0 then signal error;
say "Initialization of socket set complete";
/**/
res = Socket('Socket');
parse var res rc socketid .;
if rc¬=0 then signal error;
say "Socket creation successful";
/**/
res = Socket('Gethostbyname', proxyname);
parse var res rc ipaddresslist;
if rc¬=0 then signal error;
ipctr = words(ipaddresslist);
do i = 1 to ipctr;
   proxyip = strip(word(ipaddresslist,i));
   say "Passed proxy" proxyname "resolves to" proxyip;
end i;
/**/
proxyok = false;
do i = 1 to ipctr;
   proxyip = strip(word(ipaddresslist,i));
   res = Socket('Connect', socketid, 'AF_INET' proxyport proxyip);
   parse var res rc .;
   if rc=0 then do;
            say "Socket bind successful via" proxyip;
            proxyok = true;
            leave i;
         end;
      else do;
            say "Socket bind failed via" proxyip;
            say "Socket interface failure:" res;
         end;
end i;
if ¬proxyok then signal error;
/**/
res = Socket('Setsockopt', socketid, 'Sol_Socket', 'So_ASCII', 'On');
parse var res rc .;
if rc¬=0 then signal error;
say "Socket ASCII translation mode activation successful";
/**/
res = Socket('Write', socketid, httpreq);
parse var res rc .;
if rc¬=0 then signal error;
say "Socket HTTPREQ successful";
/**/
respctr = 0;
socketcharlen = 0;
foundhdr=false;
responsestream="";
filecharlen = 0;
do forever;
  res = Socket('Recvfrom', socketid, 100000);
  parse var res rc . . . datalen data;
  if rc¬=0 then signal error;
  if datalen=0 then leave;
  say "Socket read" datalen "characters";
  socketcharlen = socketcharlen + datalen;
  /* convert dashed vertical line to solid vertical line */
  responsestream=responsestream||translate(data,'4f'x,'6a'x);
  if ¬foundhdr then do;
       say "Searching for HTTP request/response header";
       if pos("0d250d25"x,responsestream)¬=0 then do;
           parse var responsestream header "0d250d25"x ,
                  responsestream;
           say "HTTP request/response header located";
           say length(header) "characters.";
           say "HTTP request/response header:" header;
           foundhdr=true;
           end;
  end;
  do while(foundhdr & pos("25"x,responsestream)¬=0);
           respctr=respctr+1;
           parse var responsestream out.respctr "25"x responsestream;
           linelen = length(out.respctr);
           if linelen¬=0 then do; /* If line=just '25'x then skip */
              /* strip trailing cr, if any */
              if substr(out.respctr,linelen,1)="0d"x then ,
                  out.respctr=substr(out.respctr,1,linelen-1);
              filecharlen = filecharlen + length(out.respctr);
           end;
  end;
end;
say "Socket read EOF signalled";
say "Total socket read characters:" socketcharlen;
if ¬foundhdr then do;
       say "ERROR: HTTP request/response header not located";
       say "Clear text read:";
       say responsestream;
       say "Hex text read:";
       say c2x(responsestream);
       say "Terminating";
       exit 20;
       end;
if responsestream¬="" then do;
       say "Logic error: Response stream not totally processed";
       say "Remaining response stream:";
       say c2x(responsestream);
       say "Terminating";
       exit 24;
       end;
"execio * diskw HTTPRESP (stem out. finis";
saverc = rc;
say "File write of" filecharlen "characters complete" saverc;
say respctr "records written.";
if saverc¬=0 then exit 16;
/**/
res = Socket('Close', socketid);
parse var res rc .;
if rc¬=0 then signal error;
say "Socket close successful";
/**/
res = Socket('Terminate', subtaskid);
parse var res rc subtaskid .;
if rc¬=0 then signal error;
say "Socket termination successful";
exit 0;
error: Say "Socket interface failure:" res; exit 16;
